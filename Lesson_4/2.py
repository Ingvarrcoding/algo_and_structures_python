"""
2. Написать два алгоритма нахождения i-го по счёту простого числа.
Без использования «Решета Эратосфена»;
Используя алгоритм «Решето Эратосфена»
"""

import timeit
import cProfile


def find_simple(num):
    k = 1
    i = 3
    j = 2
    is_simple = False
    if num == 1:
        print(2)
    else:
        while True:
            while i > j:
                if i % j == 0 and i != j:
                    is_simple = True
                    break
                j += 1
            if is_simple == False:
                k += 1
            j = 2
            i += 1
            is_simple = False
            if k == num:
                break
        print(i - 1)


def resheto(num):
    n = 100000
    a = [0] * n
    for i in range(n):
        a[i] = i
    a[1] = 0
    m = 2
    while m < n:
        if a[m] != 0:
            j = m * 2
            while j < n:
                a[j] = 0
                j = j + m
        m += 1
    b = []
    for i in a:
        if a[i] != 0:
            b.append(a[i])
    del a
    print(b[num - 1])


i = 400
print(timeit.timeit("find_simple(400)", setup="from __main__ import find_simple", number=1))
print(timeit.timeit("resheto(400)", setup="from __main__ import resheto", number=1))
cProfile.run("find_simple(i)")
cProfile.run("resheto(i)")

"""
При i = 1
0.001 - без решета
0.283 - с решетом

При i = 10
0.001 - без решета
0.283 - с решетом

При i = 100
0.014 - без решета
0.284 - с решетом

При i = 400
0.302 - без решета
0.275 - с решетом

При i = 500
0.476 - без решета
0.274 - с решетом

При i = 1000
2.104 - без решета
0.287 - с решетом

Преимущество алгоритма с использованием "Решета Эратосфена" начинает проявляется при количестве чисел примерно от 400.
При количестве чисел до 400 целесообразнее применять алгоритм нахождения без использования "Решета Эратосфена".

Время выполнения алгоритма с решетом при наличии большого количества чисел гораздо меньше за счет того, что в нем не применяется перебор всех чисел, как в варианте без решета. Кроме того, в нем происходит работа с массивом, и поиск необходимого числа заключается в выводе значения по заданному порядковому номеру.
"""
